name: CI/CD Pipeline

on:
  push:
    branches: [main, dev]

jobs:
  lintTest:
    name: Lint
    runs-on: self-hosted
    steps:
      - name: Clone Repository
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: |
          echo "Installing dependencies..."
          npm install

      - name: Run Linter
        run: |
          echo "Running linter..."
          npm run lint
        env:
          CI: true

  securityChecks:
    name: Security Checks
    runs-on: self-hosted
    steps:
      - name: Check for Security
        run: |
          echo "Running security checks..."
          sleep 5s
          echo "Done."

  deploy:
    name: Deploy
    runs-on: self-hosted
    needs: [lintTest, securityChecks]
    steps:
      - name: Set Environment Variables
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "DEPLOY_DIR=/var/www/nextjs-app" >> $GITHUB_ENV
            echo "PM2_NAME=nextjs-app" >> $GITHUB_ENV
          else
            echo "DEPLOY_DIR=/var/www/nextjs-dev" >> $GITHUB_ENV
            echo "PM2_NAME=nextjs-dev" >> $GITHUB_ENV
          fi

      - name: Clone Repository
        uses: actions/checkout@v2

      - name: Sync files to server directory
        run: |
          echo "Syncing to $DEPLOY_DIR"
          rsync -avz --delete ./ $DEPLOY_DIR/

      - name: Install Dependencies
        run: |
          cd $DEPLOY_DIR
          npm ci

      - name: Build Application
        run: |
          cd $DEPLOY_DIR
          npm run build

      - name: Start/Restart with PM2
        run: |
          cd $DEPLOY_DIR

          # Try to restart, if it fails then start
          if pm2 list | grep -q $PM2_NAME; then
          echo "Restarting PM2 app: $PM2_NAME"
          pm2 restart $PM2_NAME
          else
          echo "Starting PM2 app: $PM2_NAME"
          PORT=$(grep PORT .env | cut -d '=' -f2) pm2 start npm --name "$PM2_NAME" -- start
          fi

          pm2 save
